import { applyMiddleware } from 'react-redux'
import thunk from 'redux-thunk'
import logger from 'redux-logger'
import { configureStore, composeWithDevTools } from 'redux-devtools-extension'
import { createWrapper } from 'next-redux-wrapper'
import rootReducer from 'redux/reducers'

// initial states here
const initalState = {}

// middleware
const middlewares = [thunk]

const environment = process.env.NODE_ENV
console.log(environment)
console.log('react_app_path_listskills : ' + process.env.react_app_path_listskills)
console.log('react_app_path_statichtmls : ' + process.env.react_app_path_statichtmls)

if (environment === 'development') {
  middlewares.push(logger)
}

// creating store
export const store = configureStore(
  rootReducer,
  initalState,
  composeWithDevTools(applyMiddleware(...middlewares)),
)

// assigning store to next wrapper
const makeStore = () => store

export const wrapper = createWrapper(makeStore)
